<?php

declare(strict_types=1);

namespace App\Containers\{{section-name}}\{{container-name}}\Task;

use App\Containers\{{section-name}}\{{container-name}}\Data\Repository\{{model}}Repository;
use App\Containers\{{section-name}}\{{container-name}}\Event\{{event}};
use App\Containers\{{section-name}}\{{container-name}}\Model\{{model}};
use Ship\Exception\NotFoundException;
use Ship\Exception\UpdateResourceFailedException;
use Ship\Parent\Task\Task as ParentTask;
use Exception;
use Illuminate\Database\Eloquent\ModelNotFoundException;

class {{class-name}} extends ParentTask
{
    public function __construct(
        protected {{model}}Repository $repository
    ) {
    }

    /**
     * @throws NotFoundException
     * @throws UpdateResourceFailedException
     */
    public function run(array $data, $id): {{model}}
    {
        try {
            ${{_model}} = $this->repository->update($data, $id);
            {{event}}::dispatch(${{_model}});

            return ${{_model}};
        } catch (ModelNotFoundException) {
            throw new NotFoundException();
        } catch (Exception) {
            throw new UpdateResourceFailedException();
        }
    }
}
