<?php

declare(strict_types=1);

namespace App\Domain\CitizenUnavailability\Observer;

use App\Domain\CitizenUnavailability\Model\CitizenUnavailability;
use App\Domain\UserBusyness\Service\UserBusynessService;

class CitizenUnavailabilityObserver
{
    /**
     * Handle court sessions after all transactions are committed.
     *
     * @var bool
     */
    public $afterCommit = true;

    /**
     * Handle the CitizenUnavailability "created" event.
     *
     * @param CitizenUnavailability $citizenUnavailability
     * @return void
     */
    public function created(CitizenUnavailability $citizenUnavailability)
    {
        // fill user_busynesses
        app(UserBusynessService::class)->syncUserAfterUnavailability($citizenUnavailability);
    }

    /**
     * Handle the CitizenUnavailability "updated" event.
     *
     * @param CitizenUnavailability $citizenUnavailability
     * @return void
     */
    public function updated(CitizenUnavailability $citizenUnavailability)
    {
        // fill user_busynesses
        $resource = CitizenUnavailability::find($citizenUnavailability->citizenUnavailabilityId);
        app(UserBusynessService::class)->syncUserAfterUnavailability($resource);
    }
}
